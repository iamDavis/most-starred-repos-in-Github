{"ast":null,"code":"var _jsxFileName = \"/Users/xiaodeng/Downloads/github-project/src/components/repo-list.jsx\";\nimport React, { Component } from 'react';\nimport CommitList from './commit-list';\nimport './style.css';\nconst Fragment = React.Fragment;\n\nclass RepoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        isShowCommitList: false\n      });\n    };\n\n    this.state = {\n      repoList: [],\n      url: '',\n      isShowCommitList: false,\n      name: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getRepoListByStar();\n  }\n\n  getCommitList(item) {\n    const commitsUrl = item['commits_url'] || '';\n    const end = commitsUrl.indexOf('{/sha}') || 0;\n    let url = commitsUrl.slice(0, end);\n    const time = new Date(Date.now() - 86400000).toJSON();\n    url = \"\".concat(url, \"?since=format:\").concat(time);\n    this.setState({\n      url,\n      isShowCommitList: true,\n      name: item.name\n    });\n  }\n\n  getRepoListByStar() {\n    fetch('https://api.github.com/search/repositories?q=stars:>=500&sort=stars&page=1&per_page=100').then(response => response.json()).then(data => {\n      this.setState({\n        repoList: data.items || []\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          repoList = _this$state.repoList,\n          url = _this$state.url,\n          isShowCommitList = _this$state.isShowCommitList,\n          name = _this$state.name;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"100 most starred Github repositories\"), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, repoList.length ? repoList.map(item => React.createElement(\"div\", {\n      key: item.id,\n      className: \"item\",\n      onClick: this.getCommitList.bind(this, item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, item.name), React.createElement(\"div\", {\n      className: \"stars item-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"stars: \", React.createElement(\"span\", {\n      className: \"text-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, item['stargazers_count'])), React.createElement(\"div\", {\n      className: \"forks item-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"forks: \", React.createElement(\"span\", {\n      className: \"text-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, item.forks)), React.createElement(\"div\", {\n      className: \"time item-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"created: \", React.createElement(\"span\", {\n      className: \"text-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, item['created_at'].slice(0, 10))), React.createElement(\"div\", {\n      className: \"link item-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"text-content link-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, item['html_url'])))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"loading...\"))), isShowCommitList && React.createElement(CommitList, {\n      url: url,\n      handleClose: this.handleClose,\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default RepoList;","map":{"version":3,"sources":["/Users/xiaodeng/Downloads/github-project/src/components/repo-list.jsx"],"names":["React","Component","CommitList","Fragment","RepoList","constructor","props","handleClose","setState","isShowCommitList","state","repoList","url","name","componentDidMount","getRepoListByStar","getCommitList","item","commitsUrl","end","indexOf","slice","time","Date","now","toJSON","fetch","then","response","json","data","items","render","length","map","id","bind","forks"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CommitList from './commit-list';\nimport './style.css';\n\nconst { Fragment } = React;\n\nclass RepoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repoList: [],\n      url: '',\n      isShowCommitList: false,\n      name: '',\n    };\n  }\n  componentDidMount() {\n    this.getRepoListByStar();\n  }\n  getCommitList(item) {\n    const commitsUrl = item['commits_url'] || '';\n    const end = commitsUrl.indexOf('{/sha}') || 0;\n    let url = commitsUrl.slice(0, end);\n    const time = new Date(Date.now() - 86400000).toJSON();\n    url = `${url}?since=format:${time}`;\n    this.setState({\n      url,\n      isShowCommitList: true,\n      name: item.name,\n    });\n  }\n\n  getRepoListByStar() {\n    fetch('https://api.github.com/search/repositories?q=stars:>=500&sort=stars&page=1&per_page=100')\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          repoList: data.items || [],\n        });\n      });\n  }\n\n  handleClose = () => {\n    this.setState({\n      isShowCommitList: false,\n    });\n  };\n  render() {\n    const { repoList, url, isShowCommitList, name } = this.state;\n    return (\n      <Fragment>\n        <div className=\"list-wrapper\">\n          <div className=\"header\">100 most starred Github repositories</div>\n          <div className=\"main\">\n            {repoList.length ? (\n              repoList.map((item) => (\n                <div key={item.id} className=\"item\" onClick={this.getCommitList.bind(this, item)}>\n                  <div className=\"name\">{item.name}</div>\n                  <div className=\"stars item-text\">\n                    stars: <span className=\"text-content\">{item['stargazers_count']}</span>\n                  </div>\n                  <div className=\"forks item-text\">\n                    forks: <span className=\"text-content\">{item.forks}</span>\n                  </div>\n                  <div className=\"time item-text\">\n                    created: <span className=\"text-content\">{item['created_at'].slice(0, 10)}</span>\n                  </div>\n                  <div className=\"link item-text\">\n                    <span className=\"text-content link-content\">{item['html_url']}</span>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div>loading...</div>\n            )}\n          </div>\n        </div>\n        {isShowCommitList && <CommitList url={url} handleClose={this.handleClose} name={name} />}\n      </Fragment>\n    );\n  }\n}\n\nexport default RepoList;\n"]},"metadata":{},"sourceType":"module"}